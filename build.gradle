buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'com.gradle.publish:plugin-publish-plugin:0.11.0'
  }
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: "com.gradle.plugin-publish"

ext {
    user = 'jprante'
    name = 'gradle-plugin-jflex'
    pluginDescription = 'Gradle plugin for using JFlex'
    scmUrl = 'https://github.com/' + user + '/' + name
    scmConnection = 'scm:git:git://github.com/' + user + '/' + name + '.git'
    scmDeveloperConnection = 'scm:git:git://github.com/' + user + '/' + name + '.git'
}

wrapper {
    gradleVersion = '6.4'
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

configurations {
  wagon
}

dependencies {
  implementation gradleApi()
  implementation "de.jflex:jflex:1.8.2"
  wagon 'org.apache.maven.wagon:wagon-ssh:3.0.0'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all,-fallthrough"
    if (!options.compilerArgs.contains("-processor")) {
        options.compilerArgs << '-proc:none'
    }
}

if (project.hasProperty('gradle.publish.key')) {
    pluginBundle {
        website = scmUrl
        vcsUrl = scmUrl
        plugins {
            jflexPlugin {
                id = 'org.xbib.gradle.plugin.jflex'
                description = pluginDescription
                displayName = 'Gradle JFlex plugin'
                tags = ['jflex']
                version = project.version
            }
        }
    }
}
